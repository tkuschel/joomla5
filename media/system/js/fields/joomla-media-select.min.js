/**
 * @copyright   (C) 2021 Open Source Matters, Inc. <https://www.joomla.org>
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 */if(!Joomla)throw new Error("Joomla API is not properly initiated");Joomla.selectedMediaFile={};const supportedExtensions=Joomla.getOptions("media-picker",{});if(!Object.keys(supportedExtensions).length)throw new Error("No supported extensions provided");document.addEventListener("onMediaFileSelected",async i=>{Joomla.selectedMediaFile=i.detail;const e=Joomla.Modal.getCurrent(),l=e.querySelector(".joomla-dialog-body");if(!l||l.closest(".joomla-dialog-media-field"))return;const t=l.querySelector("joomla-field-mediamore");t&&t.parentNode.removeChild(t);const{images:a,audios:s,videos:o,documents:c}=supportedExtensions;if(Joomla.selectedMediaFile.path){let d;a.includes(Joomla.selectedMediaFile.extension.toLowerCase())?d="images":s.includes(Joomla.selectedMediaFile.extension.toLowerCase())?d="audios":o.includes(Joomla.selectedMediaFile.extension.toLowerCase())?d="videos":c.includes(Joomla.selectedMediaFile.extension.toLowerCase())&&(d="documents"),d&&l.insertAdjacentHTML("afterbegin",`<joomla-field-mediamore
  parent-id="${e.id}"
  type="${d}"
  summary-label="${Joomla.Text._("JFIELD_MEDIA_SUMMARY_LABEL")}"
  lazy-label="${Joomla.Text._("JFIELD_MEDIA_LAZY_LABEL")}"
  alt-label="${Joomla.Text._("JFIELD_MEDIA_ALT_LABEL")}"
  alt-check-label="${Joomla.Text._("JFIELD_MEDIA_ALT_CHECK_LABEL")}"
  alt-check-desc-label="${Joomla.Text._("JFIELD_MEDIA_ALT_CHECK_DESC_LABEL")}"
  classes-label="${Joomla.Text._("JFIELD_MEDIA_CLASS_LABEL")}"
  figure-classes-label="${Joomla.Text._("JFIELD_MEDIA_FIGURE_CLASS_LABEL")}"
  figure-caption-label="${Joomla.Text._("JFIELD_MEDIA_FIGURE_CAPTION_LABEL")}"
  embed-check-label="${Joomla.Text._("JFIELD_MEDIA_EMBED_CHECK_LABEL")}"
  embed-check-desc-label="${Joomla.Text._("JFIELD_MEDIA_EMBED_CHECK_DESC_LABEL")}"
  download-check-label="${Joomla.Text._("JFIELD_MEDIA_DOWNLOAD_CHECK_LABEL")}"
  download-check-desc-label="${Joomla.Text._("JFIELD_MEDIA_DOWNLOAD_CHECK_DESC_LABEL")}"
  title-label="${Joomla.Text._("JFIELD_MEDIA_TITLE_LABEL")}"
  width-label="${Joomla.Text._("JFIELD_MEDIA_WIDTH_LABEL")}"
  height-label="${Joomla.Text._("JFIELD_MEDIA_HEIGHT_LABEL")}"
></joomla-field-mediamore>
`)}});const isElement=i=>typeof HTMLElement=="object"?i instanceof HTMLElement:i&&typeof i=="object"&&i.nodeType===1&&typeof i.nodeName=="string",getImageSize=i=>new Promise((e,l)=>{const t=new Image;t.src=i,t.onload=()=>{Joomla.selectedMediaFile.width=t.width,Joomla.selectedMediaFile.height=t.height,e(!0)},t.onerror=()=>{l(!1)}}),insertAsImage=async(i,e,l)=>{if(i.url){const{rootFull:t}=Joomla.getOptions("system.paths"),a=i.url.split(t);a.length>1?(Joomla.selectedMediaFile.url=a[1],i.thumb_path?Joomla.selectedMediaFile.thumb=i.thumb_path:Joomla.selectedMediaFile.thumb=!1):i.thumb_path&&(Joomla.selectedMediaFile.url=i.url,Joomla.selectedMediaFile.thumb=i.thumb_path)}else Joomla.selectedMediaFile.url=!1;if(Joomla.selectedMediaFile.url){let t,a="",s="",o="",c="",d="",r="",n="";if(!isElement(e)||e.replaceSelection){const h=e.replaceSelection?e:Joomla.editors.instances[e];if(t=Joomla.Modal.getCurrent().querySelector("joomla-field-mediamore"),t&&(t.getAttribute("alt-check")==="true"&&(o=' alt=""'),s=t.getAttribute("alt-value")?` alt="${t.getAttribute("alt-value")}"`:o,c=t.getAttribute("img-classes")?` class="${t.getAttribute("img-classes")}"`:"",d=t.getAttribute("fig-classes")?` class="image ${t.getAttribute("fig-classes")}"`:' class="image"',r=t.getAttribute("fig-caption")?`${t.getAttribute("fig-caption")}`:"",t.getAttribute("is-lazy")==="true"&&(a=` loading="lazy" width="${Joomla.selectedMediaFile.width}" height="${Joomla.selectedMediaFile.height}"`,Joomla.selectedMediaFile.width===0||Joomla.selectedMediaFile.height===0)))try{await getImageSize(Joomla.selectedMediaFile.url),a=` loading="lazy" width="${Joomla.selectedMediaFile.width}" height="${Joomla.selectedMediaFile.height}"`}catch{a=""}r?n=`<figure${d}><img src="${Joomla.selectedMediaFile.url}"${c}${a}${s} data-path="${Joomla.selectedMediaFile.path}"/><figcaption>${r}</figcaption></figure>`:n=`<img src="${Joomla.selectedMediaFile.url}"${c}${a}${s} data-path="${Joomla.selectedMediaFile.path}"/>`,t&&t.parentNode.removeChild(t),h.replaceSelection(n)}else{if(Joomla.selectedMediaFile.width===0||Joomla.selectedMediaFile.height===0)try{await getImageSize(Joomla.selectedMediaFile.url)}catch{Joomla.selectedMediaFile.height=0,Joomla.selectedMediaFile.width=0}l.markValid(),l.setValue(`${Joomla.selectedMediaFile.url}#joomlaImage://${i.path.replace(":","")}?width=${Joomla.selectedMediaFile.width}&height=${Joomla.selectedMediaFile.height}`)}}},insertAsOther=(i,e,l,t)=>{if(i.url){const{rootFull:s}=Joomla.getOptions("system.paths"),o=i.url.split(s);o.length>1?Joomla.selectedMediaFile.url=o[1]:Joomla.selectedMediaFile.url=i.url}else Joomla.selectedMediaFile.url=!1;let a;if(Joomla.selectedMediaFile.url)if(!isElement(e)||e.replaceSelection){let s;const o=e.replaceSelection?e:Joomla.editors.instances[e];if(a=Joomla.Modal.getCurrent().querySelector("joomla-field-mediamore"),a){const d=a.getAttribute("embed-it");if(d&&d==="true"){if(t==="audios"&&(s=`<audio controls src="${Joomla.selectedMediaFile.url}"></audio>`),t==="documents"){const r=a.getAttribute("title");s=`<object type="application/${Joomla.selectedMediaFile.extension}" data="${Joomla.selectedMediaFile.url}" ${r?`title="${r}"`:""} width="${a.getAttribute("width")}" height="${a.getAttribute("height")}">
  ${Joomla.Text._("JFIELD_MEDIA_UNSUPPORTED").replace("{tag}",`<a download href="${Joomla.selectedMediaFile.url}">`).replace(/{extension}/g,Joomla.selectedMediaFile.extension)}
</object>`}t==="videos"&&(s=`<video controls width="${a.getAttribute("width")}" height="${a.getAttribute("height")}">
  <source src="${Joomla.selectedMediaFile.url}" type="${Joomla.selectedMediaFile.fileType}">
</video>`)}else if(Joomla.editors.instances[e].getSelection()!=="")s=`<a download href="${Joomla.selectedMediaFile.url}">${Joomla.editors.instances[e].getSelection()}</a>`;else{const r=/([\w-]+)\./.exec(Joomla.selectedMediaFile.url);s=`<a download href="${Joomla.selectedMediaFile.url}">${Joomla.Text._("JFIELD_MEDIA_DOWNLOAD_FILE").replace("{file}",r[1])}</a>`}}a&&a.parentNode.removeChild(a),o.replaceSelection(s)}else l.markValid(),l.givenType=t,l.setValue(Joomla.selectedMediaFile.url)},execTransform=async(i,e,l)=>{if(i.success===!0){const t=i.data[0],{images:a,audios:s,videos:o,documents:c}=supportedExtensions;if(Joomla.selectedMediaFile.extension&&a.includes(t.extension.toLowerCase()))return insertAsImage(t,e,l);if(Joomla.selectedMediaFile.extension&&s.includes(t.extension.toLowerCase()))return insertAsOther(t,e,l,"audios");if(Joomla.selectedMediaFile.extension&&c.includes(t.extension.toLowerCase()))return insertAsOther(t,e,l,"documents");if(Joomla.selectedMediaFile.extension&&o.includes(t.extension.toLowerCase()))return insertAsOther(t,e,l,"videos")}return""};Joomla.getMedia=(i,e,l)=>new Promise((t,a)=>{if(!i||typeof i=="object"&&(!i.path||i.path==="")){Joomla.selectedMediaFile={},t({resp:{success:!1}});return}const s=Joomla.getOptions("media-picker-api",{}).apiBaseUrl||"index.php?option=com_media&format=json",o=new URL(s,window.location.origin);o.searchParams.append("task","api.files"),o.searchParams.append("url",!0),o.searchParams.append("path",i.path),o.searchParams.append("mediatypes","0,1,2,3"),o.searchParams.append(Joomla.getOptions("csrf.token"),1),fetch(o,{method:"GET",headers:{"Content-Type":"application/json"}}).then(c=>c.json()).then(async c=>t(await execTransform(c,e,l))).catch(c=>a(c))}),Joomla.getImage=Joomla.getMedia;class JoomlaFieldMediaOptions extends HTMLElement{get type(){return this.getAttribute("type")}get parentId(){return this.getAttribute("parent-id")}get lazytext(){return this.getAttribute("lazy-label")}get alttext(){return this.getAttribute("alt-label")}get altchecktext(){return this.getAttribute("alt-check-label")}get altcheckdesctext(){return this.getAttribute("alt-check-desc-label")}get embedchecktext(){return this.getAttribute("embed-check-label")}get embedcheckdesctext(){return this.getAttribute("embed-check-desc-label")}get downloadchecktext(){return this.getAttribute("download-check-label")}get downloadcheckdesctext(){return this.getAttribute("download-check-desc-label")}get classestext(){return this.getAttribute("classes-label")}get figclassestext(){return this.getAttribute("figure-classes-label")}get figcaptiontext(){return this.getAttribute("figure-caption-label")}get summarytext(){return this.getAttribute("summary-label")}get widthtext(){return this.getAttribute("width-label")}get heighttext(){return this.getAttribute("height-label")}get titletext(){return this.getAttribute("title-label")}connectedCallback(){this.type==="images"?(this.innerHTML=`<details open>
<summary>${this.summarytext}</summary>
<div class="">
  <div class="form-group">
    <div class="input-group">
      <label class="input-group-text" for="${this.parentId}-alt">${this.alttext}</label>
      <input class="form-control" type="text" id="${this.parentId}-alt" data-is="alt-value" />
    </div>
  </div>
  <div class="form-group">
    <div class="form-check">
      <input class="form-check-input" type="checkbox" id="${this.parentId}-alt-check">
      <label class="form-check-label" for="${this.parentId}-alt-check">${this.altchecktext}</label>
      <div><small class="form-text">${this.altcheckdesctext}</small></div>
    </div>
  </div>
  <div class="form-group">
    <div class="form-check">
      <input class="form-check-input" type="checkbox" id="${this.parentId}-lazy" checked>
      <label class="form-check-label" for="${this.parentId}-lazy">${this.lazytext}</label>
    </div>
  </div>
  <div class="form-group">
    <div class="input-group">
      <label class="input-group-text" for="${this.parentId}-classes">${this.classestext}</label>
      <input class="form-control" type="text" id="${this.parentId}-classes" data-is="img-classes"/>
    </div>
  </div>
  <div class="form-group">
    <div class="input-group">
      <label class="input-group-text" for="${this.parentId}-figclasses">${this.figclassestext}</label>
      <input class="form-control" type="text" id="${this.parentId}-figclasses" data-is="fig-classes"/>
    </div>
  </div>
  <div class="form-group">
    <div class="input-group">
      <label class="input-group-text" for="${this.parentId}-figcaption">${this.figcaptiontext}</label>
      <input class="form-control" type="text" id="${this.parentId}-figcaption" data-is="fig-caption"/>
    </div>
  </div>
</div>
</details>`,this.lazyInputFn=this.lazyInputFn.bind(this),this.altCheckFn=this.altCheckFn.bind(this),this.inputFn=this.inputFn.bind(this),this.lazyInput=this.querySelector(`#${this.parentId}-lazy`),this.lazyInput.addEventListener("change",this.lazyInputFn),this.altCheck=this.querySelector(`#${this.parentId}-alt-check`),this.altCheck.addEventListener("input",this.altCheckFn),[].slice.call(this.querySelectorAll('input[type="text"]')).map(e=>{e.addEventListener("input",this.inputFn);const{is:l}=e.dataset;return l&&this.setAttribute(l,e.value.replace(/"/g,"&quot;")),e}),this.setAttribute("is-lazy",!!this.lazyInput.checked),this.setAttribute("alt-check",!1)):["audios","videos","documents"].includes(this.type)&&(this.innerHTML=`<details open>
<summary>${this.summarytext}</summary>
<div class="">
  <div class="form-group">
    <div class="form-check">
      <input class="form-check-input radio" type="radio" name="flexRadioDefault" id="${this.parentId}-embed-check-2" value="0" checked>
      <label class="form-check-label" for="${this.parentId}-embed-check-2">
        ${this.downloadchecktext}
        <div><small class="form-text">${this.downloadcheckdesctext}</small></div>
      </label>
    </div>
    <div class="form-check">
      <input class="form-check-input radio" type="radio" name="flexRadioDefault" id="${this.parentId}-embed-check-1" value="1">
      <label class="form-check-label" for="${this.parentId}-embed-check-1">
        ${this.embedchecktext}
        <div><small class="form-text">${this.embedcheckdesctext}</small></div>
      </label>
    </div>
  </div>
  <div class="toggable-parts" style="display: none">
    <div style="display: ${this.type==="audios"?"none":"block"}">
      <div class="form-group">
        <div class="input-group">
          <label class="input-group-text" for="${this.parentId}-width">${this.widthtext}</label>
          <input class="form-control" type="text" id="${this.parentId}-width" value="800" data-is="width"/>
        </div>
      </div>
      <div class="form-group">
        <div class="input-group">
          <label class="input-group-text" for="${this.parentId}-height">${this.heighttext}</label>
          <input class="form-control" type="text" id="${this.parentId}-height" value="600" data-is="height"/>
        </div>
      </div>
      <div style="display: ${this.type==="document"?"block":"none"}">
        <div class="form-group">
          <div class="input-group">
            <label class="input-group-text" for="${this.parentId}-title">${this.titletext}</label>
            <input class="form-control" type="text" id="${this.parentId}-title" value="" data-is="title"/>
          </div>
        </div>
    </div>
  </div>
</div>
</details>`,this.embedInputFn=this.embedInputFn.bind(this),this.inputFn=this.inputFn.bind(this),[].slice.call(this.querySelectorAll(".form-check-input.radio")).map(e=>e.addEventListener("input",this.embedInputFn)),this.setAttribute("embed-it",!1),[].slice.call(this.querySelectorAll('input[type="text"]')).map(e=>{e.addEventListener("input",this.inputFn);const{is:l}=e.dataset;return l&&this.setAttribute(l,e.value.replace(/"/g,"&quot;")),e}))}disconnectedCallback(){this.type==="image"&&(this.lazyInput.removeEventListener("input",this.lazyInputFn),this.altInput.removeEventListener("input",this.inputFn),this.altCheck.removeEventListener("input",this.altCheckFn)),["audio","video","document"].includes(this.type)&&([].slice.call(this.querySelectorAll(".form-check-input.radio")).map(e=>e.removeEventListener("input",this.embedInputFn)),[].slice.call(this.querySelectorAll('input[type="text"]')).map(e=>e.removeEventListener("input",this.embedInputFn))),this.innerHTML=""}lazyInputFn(e){this.setAttribute("is-lazy",!!e.target.checked)}altCheckFn(e){this.setAttribute("alt-check",!!e.target.checked)}inputFn(e){const{is:l}=e.target.dataset;l&&this.setAttribute(l,e.target.value.replace(/"/g,"&quot;"))}embedInputFn(e){const{value:l}=e.target;this.setAttribute("embed-it",l!=="0");const t=this.querySelector(".toggable-parts");t&&(t.style.display!=="block"?t.style.display="block":t.style.display="none")}}customElements.define("joomla-field-mediamore",JoomlaFieldMediaOptions);
